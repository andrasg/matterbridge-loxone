name: Publish to npm

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Clean cache
        run: npm cache clean --force
  
      - name: Verify Node.js version
        run: node -v

      - name: Verify Npm version
        run: npm -v
            
      - name: Extract version from release
        id: get_version
        run: |
          # Extract version from tag name (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update package.json version
        run: |
          # Update the version in package.json
          npm version ${{ steps.get_version.outputs.version }} --no-git-tag-version --allow-same-version
          echo "Updated package.json to version ${{ steps.get_version.outputs.version }}"

      - name: Install matterbridge
        run: npm install -g matterbridge --omit=dev

      - name: Install dependencies
        run: npm ci
    
      - name: Link matterbridge
        run: npm link matterbridge

      - name: Lint the project
        run: npm run lint

      - name: Build the project
        run: npm run build

      - name: Determine npm dist-tag
        id: determine_dist_tag
        run: |
          # Determine dist tag for npm publish.
          # If the GitHub release is marked as prerelease, try to use the pre-release identifier
          # (e.g. v1.2.3-alpha.1 => tag "alpha"). Otherwise use "latest".
          # As a fallback for prerelease without a suffix use "next".
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}

          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            if [[ "$VERSION" == *"-"* ]]; then
              PR=${VERSION#*-}
              LABEL=${PR%%.*}
              echo "dist_tag=$LABEL" >> $GITHUB_OUTPUT
            else
              echo "dist_tag=next" >> $GITHUB_OUTPUT
            fi
          else
            echo "dist_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        run: npm publish --tag ${{ steps.determine_dist_tag.outputs.dist_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}